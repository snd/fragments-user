// Generated by CoffeeScript 1.9.3
module.exports.testApiUserPatchForbidden = function(command_serve, pgDropCreateMigrate, shutdown, envStringBaseUrl, urlApiLogin, urlApiUsers, requestPromise, insertFakeUsers, insertUser) {
  return function(test) {
    return pgDropCreateMigrate().then(function() {
      return insertUser({
        email: 'test@example.com',
        name: 'exampleuser',
        password: 'topsecret',
        rights: 'canAccessCockpit'
      });
    }).then(function() {
      return insertFakeUsers(3);
    }).then(function() {
      return command_serve('cockpit');
    }).then(function() {
      return requestPromise({
        method: 'POST',
        url: envStringBaseUrl + urlApiLogin(),
        json: true,
        body: {
          username: 'exampleuser',
          password: 'topsecret'
        }
      });
    }).then(function(arg) {
      var response, token;
      response = arg[0];
      test.equal(response.statusCode, 200);
      token = response.body.token;
      return requestPromise({
        method: 'PATCH',
        url: envStringBaseUrl + urlApiUsers(2),
        headers: {
          authorization: "Bearer " + token
        },
        json: true
      });
    }).then(function(arg) {
      var response;
      response = arg[0];
      test.equal(response.statusCode, 403);
      return shutdown();
    }).then(function() {
      return test.done();
    });
  };
};

module.exports.testApiUserPatchUnprocessable = function(command_serve, pgDropCreateMigrate, shutdown, envStringBaseUrl, urlApiLogin, urlApiUsers, requestPromise, insertFakeUsers, insertUser) {
  return function(test) {
    return pgDropCreateMigrate().then(function() {
      return insertUser({
        email: 'test@example.com',
        name: 'exampleuser',
        password: 'topsecret',
        rights: 'canAccessCockpit\ncanUpdateUsers'
      });
    }).then(function() {
      return insertFakeUsers(3);
    }).then(function() {
      return command_serve('cockpit');
    }).then(function() {
      return requestPromise({
        method: 'POST',
        url: envStringBaseUrl + urlApiLogin(),
        json: true,
        body: {
          username: 'exampleuser',
          password: 'topsecret'
        }
      });
    }).then(function(arg) {
      var response, token;
      response = arg[0];
      test.equal(response.statusCode, 200);
      token = response.body.token;
      return requestPromise({
        method: 'PATCH',
        url: envStringBaseUrl + urlApiUsers(2),
        headers: {
          authorization: "Bearer " + token
        },
        json: true,
        body: {
          email: 'dkjdlkf',
          name: '',
          password: '',
          rights: 'canAccessAllAndEverything'
        }
      });
    }).then(function(arg) {
      var response;
      response = arg[0];
      test.equal(response.statusCode, 422);
      test.deepEqual(response.body, {
        name: 'must not be the empty string',
        password: 'must not be the empty string',
        email: 'must be an email address'
      });
      return shutdown();
    }).then(function() {
      return test.done();
    });
  };
};

module.exports.testApiUserPatchUnprocessableTaken = function() {
  return function(test) {
    return test.done();
  };
};

module.exports.testApiUserPatchOkNoChange = function() {
  return function(test) {
    return test.done();
  };
};

module.exports.testApiUserPatchOkChange = function() {
  return function(test) {
    return test.done();
  };
};
