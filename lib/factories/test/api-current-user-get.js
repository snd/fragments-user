// Generated by CoffeeScript 1.9.3
module.exports.testApiCurrentUserGetForbidden = function(command_serve, pgDropCreateMigrate, shutdown, envStringBaseUrl, urlApiLogin, urlApiCurrentUser, requestPromise, insertUser) {
  return function(test) {
    return pgDropCreateMigrate().then(function() {
      return insertUser({
        email: 'test@example.com',
        name: 'exampleuser',
        password: 'topsecret',
        rights: ''
      });
    }).then(function() {
      return command_serve('cockpit');
    }).then(function() {
      return requestPromise({
        method: 'POST',
        url: envStringBaseUrl + urlApiLogin(),
        json: true,
        body: {
          username: 'exampleuser',
          password: 'topsecret'
        }
      });
    }).then(function(arg) {
      var response, token;
      response = arg[0];
      test.equal(response.statusCode, 200);
      token = response.body.token;
      test.ok(token != null);
      return requestPromise({
        method: 'GET',
        url: envStringBaseUrl + urlApiCurrentUser(),
        headers: {
          authorization: "Bearer " + token
        },
        json: true
      });
    }).then(function(arg) {
      var response;
      response = arg[0];
      test.equal(response.statusCode, 403);
      return shutdown();
    }).then(function() {
      return test.done();
    });
  };
};

module.exports.testApiCurrentUserGetOk = function(command_serve, pgDropCreateMigrate, shutdown, envStringBaseUrl, urlApiLogin, urlApiCurrentUser, requestPromise, insertUser) {
  return function(test) {
    return pgDropCreateMigrate().then(function() {
      return insertUser({
        email: 'test@example.com',
        name: 'exampleuser',
        password: 'topsecret',
        rights: 'canAccessCockpit'
      });
    }).then(function() {
      return command_serve('cockpit');
    }).then(function() {
      return requestPromise({
        method: 'POST',
        url: envStringBaseUrl + urlApiLogin(),
        json: true,
        body: {
          username: 'exampleuser',
          password: 'topsecret'
        }
      });
    }).then(function(arg) {
      var response, token;
      response = arg[0];
      test.equal(response.statusCode, 200);
      token = response.body.token;
      return requestPromise({
        method: 'GET',
        url: envStringBaseUrl + urlApiCurrentUser(),
        headers: {
          authorization: "Bearer " + token
        },
        json: true
      });
    }).then(function(arg) {
      var response;
      response = arg[0];
      test.equal(response.statusCode, 200);
      test.equal(response.body.email, 'test@example.com');
      test.equal(response.body.name, 'exampleuser');
      test.equal(response.body.rights, 'canAccessCockpit');
      test.ok(response.body.password == null);
      return shutdown();
    }).then(function() {
      return test.done();
    });
  };
};
